@using VulnerabilityMonitoring.Models.AccountViewModels
@model LoginViewModel
@{
    ViewData["Title"] = "Log in";
    Layout = "~/Views/Shared/_Layout_CenterScreen.cshtml";
}

<div class="card shadow-lg width-22rem">
    <div class="card-body">
        <div class="text-center mb-4">
            <img src="~/Image/Site/VM-logo.png" alt="VulnerabilityMonitoring logo" class="mb-4" style="width: 100px; height: 100px;">
        </div>
        <h6 class="mb-4 text-muted text-center">Login to your account</h6>
        <form method="post" asp-action="Login" asp-route-ReturnUrl="@Model.ReturnUrl" novalidate>
            <div class="text-start mb-3">
                <div asp-validation-summary="All" class="text-danger"></div>
            </div>
            <div class="text-start mb-3">
                <label for="email" class="form-label">Email address</label>
                <input asp-for="Email" placeholder="@Html.DisplayNameFor(m => m.Email)" class="form-control" required />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="text-start mb-3">
                <label for="password" class="form-label">Password</label>
                <input asp-for="Password" placeholder="@Html.DisplayNameFor(m => m.Password)" class="form-control" required />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="mb-3 text-start">
                <div class="form-check">
                    <input asp-for="RememberMe" class="form-check-input" type="checkbox" id="chkRememberMe">
                    <label class="form-check-label" for="chkRememberMe">
                        Remember me on this device
                    </label>
                </div>
            </div>
            <button class="btn btn-primary btn-block mb-4">Login</button>
        </form>

        @if (ViewBag.NeedsEmailConfirmation != null && (bool)ViewBag.NeedsEmailConfirmation)
        {
            <div id="emailConfirmationMessage" class="alert alert-warning" role="alert">
                Your email is not confirmed. <br />
                <button class="btn btn-link" onclick="sendConfirmationEmail('@Model.Email')">Send confirmation email</button>
            </div>
        }

        <p class="text-muted text-center mb-2">Forgot password? <a asp-controller="Account" asp-action="ForgotPassword" class="font-medium text-indigo-600 hover:text-indigo-500">Reset</a></p>
    </div>
</div>


@section Scripts {
    <script>
        function sendConfirmationEmail(email) {
            axios.post('/Account/ResendConfirmationEmail', {
                email: email
            }, {
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => {
                    if (response.status === 200) {
                        // Uppdatera meddelandet när e-post har skickats
                        document.getElementById('emailConfirmationMessage').innerHTML =
                            "A confirmation email has been sent to " + email;
                        document.getElementById('emailConfirmationMessage').classList.remove('alert-warning');
                        document.getElementById('emailConfirmationMessage').classList.add('alert-success');
                    } else {
                        document.getElementById('emailConfirmationMessage').innerHTML =
                            "Failed to send confirmation email.";
                        document.getElementById('emailConfirmationMessage').classList.remove('alert-warning');
                        document.getElementById('emailConfirmationMessage').classList.add('alert-danger');
                    }
                })
                .catch(error => {
                    document.getElementById('emailConfirmationMessage').innerHTML =
                        "Failed to send confirmation email.";
                    document.getElementById('emailConfirmationMessage').classList.remove('alert-warning');
                    document.getElementById('emailConfirmationMessage').classList.add('alert-danger');
                    console.error("There was an error sending the confirmation email:", error);
                });
        }
    </script>

    @await Html.PartialAsync("_ValidationScriptsPartial")
}